{"version":3,"sources":["main/ui/components/menu/Menu.module.css","main/ui/video/main-bg-video-20.mp4","main/ui/components/header/Header.module.css","main/ui/components/root/Root.module.css","main/ui/components/Main.module.css","main/ui/images/login-shadow.png","main/ui/images/Wisemen-shadow2.png","main/ui/icons/sound-of.svg","main/ui/icons/sound-on.svg","main/ui/video/intro-compress2.mp4","main/ui/images/main-bg.png","main/ui/images/taverna-shadow2.png","main/ui/images/point-shadow2.png","main/ui/images/about-shadow2.png","main/ui/components/header/Header.tsx","main/ui/components/root/Root.jsx","main/ui/components/menu/Menu.tsx","main/ui/components/Main.tsx","main/auth/login/loginReducer.tsx","main/auth/registration/registrationReducer.tsx","main/auth/restorePsw/restorePswReducer.tsx","main/auth/newPsw/newPswReducer.tsx","main/auth/profile/profileReducer.tsx","main/bll/store/store.ts","main/ui/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","className","styles","header","header__wrap","header__logo","src","imgLogo","alt","header__login","imgLogin","Root","useState","sound","setSound","useEffect","vid","document","getElementById","console","log","volume","root","root__video","id","controls","autoPlay","muted","poster","intro","type","videowebm","videoogg","root__icon","onClick","soundOf","soundOn","Menu","menu","menu__wrap","menu__taverna","imgTaverna","menu__point","imgPoint","menu__about","imgAbout","Main","main__wrap","initialState","rootReducer","combineReducers","login","state","action","registration","restorePsw","newPsw","profile","store","createStore","applyMiddleware","thunk","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1a0f2e56.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"Menu_menu__2Wae1\",\"menu__wrap\":\"Menu_menu__wrap__QwdWg\",\"menu__taverna\":\"Menu_menu__taverna__2o3Oi\",\"menu__point\":\"Menu_menu__point__RIVqQ\",\"menu__about\":\"Menu_menu__about__hRJQU\",\"menu__close\":\"Menu_menu__close__1PWmC\"};","module.exports = __webpack_public_path__ + \"static/media/main-bg-video-20.05dde4ff.mp4\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1n_7N\",\"header__wrap\":\"Header_header__wrap__2NVg5\",\"header__logo\":\"Header_header__logo__xq9A5\",\"header__login\":\"Header_header__login__2_P3t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Root_root__39iLw\",\"root__video\":\"Root_root__video__Zmcp9\",\"root__icon\":\"Root_root__icon__c8YVq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main__wrap\":\"Main_main__wrap__FsQSC\"};","module.exports = __webpack_public_path__ + \"static/media/login-shadow.ae8eb5b9.png\";","module.exports = __webpack_public_path__ + \"static/media/Wisemen-shadow2.19930786.png\";","module.exports = __webpack_public_path__ + \"static/media/sound-of.25920e39.svg\";","module.exports = __webpack_public_path__ + \"static/media/sound-on.8ef34d26.svg\";","module.exports = __webpack_public_path__ + \"static/media/intro-compress2.6ca8ebbf.mp4\";","module.exports = __webpack_public_path__ + \"static/media/main-bg.01fb4adf.png\";","module.exports = __webpack_public_path__ + \"static/media/taverna-shadow2.24dd3426.png\";","module.exports = __webpack_public_path__ + \"static/media/point-shadow2.cb23fb2f.png\";","module.exports = __webpack_public_path__ + \"static/media/about-shadow2.ce0590f2.png\";","import React from 'react';\r\nimport styles from './Header.module.css'\r\nimport imgLogin from '../../images/login-shadow.png'\r\nimport imgLogo from '../../images/Wisemen-shadow2.png'\r\n\r\nconst Header = () => {\r\n\r\n    return <div className={styles.header}>\r\n        <div className={styles.header__wrap}>\r\n            <div className={styles.header__logo}>\r\n                <img src={imgLogo} alt=\"logo\"/>\r\n            </div>\r\n            <div className={styles.header__login}>\r\n                <img src={imgLogin} alt=\"login\"/>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\nexport default Header","import React, { useEffect, useRef, useState } from 'react';\r\nimport styles from './Root.module.css'\r\nimport videomp4 from '../../video/main-bg-video-20.mp4'\r\nimport videowebm from '../../video/main-bg-video-20.mp4'\r\nimport videoogg from '../../video/main-bg-video-20.mp4'\r\nimport soundOf from '../../icons/sound-of.svg'\r\nimport soundOn from '../../icons/sound-on.svg'\r\nimport intro from '../../video/intro-compress2.mp4'\r\nimport poster from '../../images/main-bg.png'\r\n\r\n\r\nconst Root = () => {\r\n\tlet [ sound, setSound ] = useState (true);\r\n\tuseEffect (() => {\r\n\t\tlet vid = document.getElementById ('intro');\r\n\t\tconsole.log (vid);\r\n\t\tvid.volume = 0.15;\r\n\t}, []);\r\n\r\n\r\n\treturn (\r\n\t\t<div className={styles.root}>\r\n\t\t\t<video className={styles.root__video} id='intro' controls autoPlay muted={sound}\r\n\t\t\t\t   poster={poster}>\r\n\t\t\t\t<source src={intro} type=\"video/mp4\"/>\r\n\t\t\t\t<source src={videowebm} type=\"video/webm\"/>\r\n\t\t\t\t<source src={videoogg} type=\"video/ogg\"/>\r\n\t\t\t</video>\r\n\t\t\t{\r\n\t\t\t\t!sound &&\r\n\t\t\t\t<div className={styles.root__icon} onClick={() => setSound (!sound)}>\r\n\t\t\t\t\t<img src={soundOf} alt='soundOn'/>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\t{\r\n\t\t\t\tsound &&\r\n\t\t\t\t<div className={styles.root__icon} onClick={() => setSound (!sound)}>\r\n\t\t\t\t\t<img src={soundOn} alt='soundOf'/>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\tWe are sorry that you cannot see the intro\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default Root;","import React from 'react';\r\nimport styles from './Menu.module.css'\r\nimport imgTaverna from '../../images/taverna-shadow2.png';\r\nimport imgPoint from '../../images/point-shadow2.png';\r\nimport imgAbout from \"../../images/about-shadow2.png\";\r\nimport imgClose from \"../../images/clouse-shadow2.png\";\r\n\r\n\r\nconst Menu: React.FC = (): any => {\r\n    return (\r\n        <div className={styles.menu}>\r\n            <div className={styles.menu__wrap}>\r\n                <div className={styles.menu__taverna}>\r\n                    <img src={imgTaverna} alt=\"logo\"/>\r\n                </div>\r\n                <div className={styles.menu__point}>\r\n                    <img src={imgPoint} alt=\"point\"/>\r\n                </div>\r\n                <div className={styles.menu__about}>\r\n                    <img src={imgAbout} alt=\"about\"/>\r\n                </div>\r\n                {/*<div className={styles.menu__close}>*/}\r\n                {/*    <img src={imgClose} alt=\"close\"/>*/}\r\n                {/*</div>*/}\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Menu;","import React from 'react';\r\nimport styles from './Main.module.css'\r\nimport Header from \"./header/Header\";\r\nimport Root from './root/Root';\r\nimport Menu from './menu/Menu';\r\n\r\nconst Main = () => {\r\n  return  <div >\r\n    <Header/>\r\n    <div className={styles.main__wrap}>\r\n      <Root/>\r\n      <Menu/>\r\n    </div>\r\n\r\n    {/*<Test/>*/}\r\n    {/*<Routs/>*/}\r\n\r\n  </div>\r\n}\r\nexport default Main","import {AppStateType, InferActionTypes} from '../../bll/store/store';\r\nimport {ThunkAction, ThunkDispatch} from 'redux-thunk';\r\n\r\nconst initialState = {}\r\n\r\nexport const loginReducer = (state: typeof initialState = initialState, action: ActionsType) => {\r\n  switch (action.type) {\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  someAction: () => ({type: ''} as const)\r\n}\r\ntype ActionsType = InferActionTypes<typeof actions>\r\n\r\n// thunks\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, ActionsType>\r\ntype DispatchType = ThunkDispatch<AppStateType, unknown, ActionsType>\r\n\r\nexport const someThunkCreator = (): ThunkType => async (dispatch: DispatchType, getState: () => AppStateType) => {\r\n  try {\r\n    dispatch(actions.someAction())\r\n  } catch (e) {\r\n    console.error('error: ' + {...e})\r\n  }\r\n}","import {AppStateType, InferActionTypes} from '../../bll/store/store';\r\nimport {ThunkAction, ThunkDispatch} from 'redux-thunk';\r\n\r\nconst initialState = {}\r\n\r\nexport const registrationReducer = (state: typeof initialState = initialState, action: ActionsType) => {\r\n  switch (action.type) {\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  someAction: () => ({type: ''} as const)\r\n}\r\ntype ActionsType = InferActionTypes<typeof actions>\r\n\r\n// thunks\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, ActionsType>\r\ntype DispatchType = ThunkDispatch<AppStateType, unknown, ActionsType>\r\n\r\nexport const someActionCreator = (): ThunkType => async (dispatch: DispatchType, getState: () => AppStateType) => {\r\n  try {\r\n    dispatch(actions.someAction())\r\n  } catch (e) {\r\n    console.error('error: ' + {...e})\r\n  }\r\n}","import {AppStateType, InferActionTypes} from '../../bll/store/store';\r\nimport {ThunkAction, ThunkDispatch} from 'redux-thunk';\r\n\r\nconst initialState = {}\r\n\r\nexport const restorePswReducer = (state: typeof initialState = initialState, action: ActionsType) => {\r\n  switch (action.type) {\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  someAction: () => ({type: ''} as const)\r\n}\r\ntype ActionsType = InferActionTypes<typeof actions>\r\n\r\n// thunks\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, ActionsType>\r\ntype DispatchType = ThunkDispatch<AppStateType, unknown, ActionsType>\r\n\r\nexport const someActionCreator = (): ThunkType => async (dispatch: DispatchType, getState: () => AppStateType) => {\r\n  try {\r\n    dispatch(actions.someAction())\r\n  } catch (e) {\r\n    console.error('error: ' + {...e})\r\n  }\r\n}","import {AppStateType, InferActionTypes} from '../../bll/store/store';\r\nimport {ThunkAction, ThunkDispatch} from 'redux-thunk';\r\n\r\nconst initialState = {}\r\n\r\nexport const newPswReducer = (state: typeof initialState = initialState, action: ActionsType) => {\r\n  switch (action.type) {\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  someAction: () => ({type: ''} as const)\r\n}\r\ntype ActionsType = InferActionTypes<typeof actions>\r\n\r\n// thunks\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, ActionsType>\r\ntype DispatchType = ThunkDispatch<AppStateType, unknown, ActionsType>\r\n\r\nexport const someActionCreator = (): ThunkType => async (dispatch: DispatchType, getState: () => AppStateType) => {\r\n  try {\r\n    dispatch(actions.someAction())\r\n  } catch (e) {\r\n    console.error('error: ' + {...e})\r\n  }\r\n}","import {AppStateType, InferActionTypes} from '../../bll/store/store';\r\nimport {ThunkAction, ThunkDispatch} from 'redux-thunk';\r\n\r\nconst initialState = {}\r\n\r\nexport const profileReducer = (state: typeof initialState = initialState, action: ActionsType) => {\r\n  switch (action.type) {\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  someAction: () => ({type: ''} as const)\r\n}\r\ntype ActionsType = InferActionTypes<typeof actions>\r\n\r\n// thunks\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, ActionsType>\r\ntype DispatchType = ThunkDispatch<AppStateType, unknown, ActionsType>\r\n\r\nexport const someActionCreator = (): ThunkType => async (dispatch: DispatchType, getState: () => AppStateType) => {\r\n  try {\r\n    dispatch(actions.someAction())\r\n  } catch (e) {\r\n    console.error('error: ' + {...e})\r\n  }\r\n}","import {applyMiddleware, combineReducers, createStore} from \"redux\"\r\nimport thunk from \"redux-thunk\";\r\nimport {loginReducer} from \"../../auth/login/loginReducer\";\r\nimport {registrationReducer} from \"../../auth/registration/registrationReducer\";\r\nimport {restorePswReducer} from \"../../auth/restorePsw/restorePswReducer\";\r\nimport {newPswReducer} from \"../../auth/newPsw/newPswReducer\";\r\nimport {profileReducer} from \"../../auth/profile/profileReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  login: loginReducer,\r\n  registration: registrationReducer,\r\n  restorePsw: restorePswReducer,\r\n  newPsw: newPswReducer,\r\n  profile: profileReducer,\r\n\r\n})\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\nexport type InferActionTypes<T> = T extends { [keys: string]: (...args: any[]) => infer U } ? U : never\r\nconst store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport default store","import React from 'react';\r\nimport './App.css';\r\nimport Main from \"./components/Main\";\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"../bll/store/store\";\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <Provider store={store}>\r\n        <HashRouter>\r\n          <Main/>\r\n        </HashRouter>\r\n      </Provider>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './main/ui/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}